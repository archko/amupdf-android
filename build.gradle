import cn.archko.mupdf.buildsrc.Libs

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven {
            allowInsecureProtocol = true
            url "https://maven.aliyun.com/repository/jcenter"
        }
        maven {
            allowInsecureProtocol = true
            url "https://maven.aliyun.com/repository/google"
        }
        maven {
            allowInsecureProtocol = true
            url 'https://repo1.maven.org/maven2/'
        }
        maven {
            allowInsecureProtocol = true
            url "https://jitpack.io"
        }
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
    }
}

//plugins {
//    id 'com.diffplug.spotless' version '5.10.0'
//}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven {
            allowInsecureProtocol = true
            url "https://maven.aliyun.com/repository/jcenter"
        }
        maven {
            allowInsecureProtocol = true
            url "https://maven.aliyun.com/repository/google"
        }
        maven {
            allowInsecureProtocol = true
            url 'https://repo1.maven.org/maven2/'
        }
        maven {
            allowInsecureProtocol = true
            url "https://jitpack.io"
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = '1.8'
            allWarningsAsErrors = false
            // Opt-in to experimental compose APIs
            //freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including collectAsState()
            //freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        }
    }

    //apply plugin: 'com.diffplug.spotless'
    //spotless {
    //    kotlin {
    //        target '**/*.kt'
    //        targetExclude("$buildDir/**/*.kt")
    //        targetExclude('bin/**/*.kt')
    //        ktlint(Versions.ktlint).userData([android: "true"])
    //        licenseHeaderFile rootProject.file('spotless/copyright.kt')
    //    }
    //}
}
